version: '3.8'

services:
  service_upload:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: service_upload
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      # Servis konfigürasyonu
      - SERVICE_NAME=service_upload
      - SERVICE_VERSION=1.0.0
      - HOST=0.0.0.0
      - PORT=8001
      - DEBUG=false
      
      # Google Drive konfigürasyonu
      - GOOGLE_CREDENTIALS_PATH=/app/credentials/service-account.json
      - GOOGLE_DRIVE_FOLDER_ID=${GOOGLE_DRIVE_FOLDER_ID:-}
      
      # Dosya konfigürasyonu
      - MAX_FILE_SIZE=52428800  # 50MB
      - ALLOWED_EXTENSIONS=.jpg,.jpeg,.png,.gif,.webp,.pdf,.doc,.docx,.txt,.mp4,.mp3,.wav,.zip,.json,.csv
      
      # CORS konfigürasyonu
      - ALLOWED_ORIGINS=*
      
      # Logging
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
      
    volumes:
      # Google Drive credentials
      - ./credentials:/app/credentials:ro
      
      # Logs
      - ./logs:/app/logs
      
      # Temp files (optional persistent storage)
      - upload_temp:/app/temp
      
    networks:
      - upload_network
      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
      
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Redis cache (opsiyonel - gelecekte cache için kullanılabilir)
  redis:
    image: redis:7-alpine
    container_name: service_upload_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - upload_network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  upload_temp:
    driver: local
  redis_data:
    driver: local

networks:
  upload_network:
    driver: bridge
    name: upload_network
